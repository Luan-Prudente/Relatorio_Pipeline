name: Allure Report com GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project with clean
        run: mvn clean install -DskipTests

  healthcheck:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Teste healthcheck
        run: mvn test -Dtest=com.vemser.pipeline.rest.healthcheck.**

      - name: Upload Artefato healthcheck
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-healthcheck
          path: target/allure-results

  contrato:
    runs-on: ubuntu-latest
    needs: healthcheck
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Teste contrato
        run: mvn test -Dtest=com.vemser.pipeline.rest.contrato.**

      - name: Upload Artefato contrato
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-contrato
          path: target/allure-results

  funcional:
    runs-on: ubuntu-latest
    needs: contrato
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Teste Funcional
        run: mvn test -Dtest=com.vemser.pipeline.rest.funcional.**
        continue-on-error: true

      - name: Ensure Allure results directory exists
        run: mkdir -p target/allure-results || true

      - name: List target directory
        run: ls -R target

      - name: Upload Artefato funcional
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-funcional
          path: target/allure-results

  relatorio:
    runs-on: ubuntu-latest
    needs: [healthcheck, contrato, funcional]
    continue-on-error: true
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Limpando Allure
        run: rm -rf target/allure-results

      - name: Download Artefato healthcheck
        uses: actions/download-artifact@v4
        with:
          name: allure-results-healthcheck
          path: target/allure-results-healthcheck
        continue-on-error: true

      - name: Download Artefato contrato
        uses: actions/download-artifact@v4
        with:
          name: allure-results-contrato
          path: target/allure-results-contrato
        continue-on-error: true

      - name: Download Artefato funcional
        uses: actions/download-artifact@v4
        with:
          name: allure-results-funcional
          path: target/allure-results-funcional
        continue-on-error: true

      - name: Verificando Allure results
        run: |
          mkdir -p target/allure-results
          cp -r target/allure-results-healthcheck/* target/allure-results/ || true
          cp -r target/allure-results-contrato/* target/allure-results/ || true
          cp -r target/allure-results-funcional/* target/allure-results/ || true

      - name: Criando Allure Report
        run: mvn allure:report

      - name: Listando diretorio Allure
        run: ls -R target/allure-report

      - name: Publicar no GitHub Pages do repositório público
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PUBLIC_REPO_TOKEN }}
          publish_dir: target/allure-report
          external_repository: luan-prudente/Relatorio_Pipeline
          publish_branch: gh-pages
